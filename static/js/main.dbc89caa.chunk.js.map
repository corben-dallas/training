{"version":3,"sources":["components/Form.jsx","components/Item.jsx","components/Table.jsx","model/model.js","App.js","index.js"],"names":["Form","form","onInputsChange","onAdd","isEdit","onEditAdd","className","type","onChange","name","value","userDate","placeholder","autoComplete","disabled","userDistance","onClick","Item","id","date","distance","onEdit","onRemove","useState","edit","setEdit","Table","items","error","length","sort","a","b","split","reverse","join","map","item","key","TrainingModel","this","App","list","setList","setError","setIsEdit","setForm","Fragment","e","target","prev","test","some","nanoid","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbc89caa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = ({\r\n\tform, \r\n\tonInputsChange,\r\n\tonAdd,\r\n\tisEdit,\r\n\tonEditAdd,\r\n}) => (\r\n\t<div className=\"form__content\">\r\n\t\t<input \r\n\t\t\ttype='text'\r\n\t\t\tonChange={onInputsChange}\r\n\t\t\tname='userDate'\r\n\t\t\tvalue={form.userDate}\r\n\t\t\tplaceholder='Введите дату (дд.мм.гггг)'\r\n\t\t\tclassName=\"form__input form__input--date\"\r\n\t\t\tautoComplete='off'\r\n\t\t\tdisabled={isEdit}\r\n\t\t/>\r\n\t\t<input \r\n\t\t\ttype=\"text\"\r\n\t\t\tonChange={onInputsChange}\r\n\t\t\tname='userDistance'\r\n\t\t\tvalue={form.userDistance}\r\n\t\t\tplaceholder='Введите расстояние (км)'\r\n\t\t\tclassName=\"form__input form__input--distance\"\r\n\t\t\tautoComplete='off'\r\n\t\t/>\r\n\t\t<button \r\n\t\t\tonClick={isEdit ? onEditAdd : onAdd}\r\n\t\t\tdisabled={!form.userDistance || !form.userDate}\r\n\t\t\tclassName={`form__input form__input--button ${!form.userDistance || !form.userDate ? 'form__input--button-disabled' : ''}`}\r\n\t\t>\r\n\t\t\tДобавить\r\n\t\t</button>\r\n\t</div>\r\n);\r\n\r\nForm.propTypes = {\r\n\tform: PropTypes.shape({\r\n\t\tuserDistance: PropTypes.oneOfType([\r\n\t\t\tPropTypes.string,\r\n\t\t\tPropTypes.number,\r\n\t\t]),\r\n\t\tuserDate: PropTypes.string,\r\n\t}).isRequired,\r\n\tonInputsChange: PropTypes.func.isRequired,\r\n\tonAdd: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nconst Item = ({\r\n\tid,\r\n\tdate,\r\n\tdistance,\r\n\tonEdit,\r\n\tonRemove,\r\n}) => {\r\n\tconst [edit, setEdit] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className={`list__item ${edit ? 'list__item--edit' : ''}`}>\r\n\t\t\t<div className=\"list__item--row list__item--date\">{date}</div>\r\n\t\t\t<div className=\"list__item--row list__item--distance\">{distance}</div>\r\n\t\t\t<div className=\"list__item--row list__item--actions\">\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName=\"action action--edit\"\r\n\t\t\t\t\tonClick={() => {onEdit(date, distance); setEdit(true);} }\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"material-icons\">edit</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName=\"action action--remove\"\r\n\t\t\t\t\tonClick={() => onRemove(id)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"material-icons\">delete</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\tItem.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tdate: PropTypes.string.isRequired,\r\n\tdistance: PropTypes.oneOfType([\r\n\t\tPropTypes.number,\r\n\t\tPropTypes.string,\r\n\t]).isRequired,\r\n\tonRemove: PropTypes.func.isRequired,\r\n\tonEdit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Item from './Item';\r\n\r\nconst Table = ({\r\n\tonEdit,\r\n\tonRemove,\r\n\titems,\r\n\terror,\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"list\">\r\n\t\t\t{!!error.length && \r\n\t\t\t\t<div className=\"list__error\">\r\n\t\t\t\t\t{error}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{!!items.length &&\r\n\t\t\t\t<div className=\"list__header\">\r\n\t\t\t\t\t<div className=\"list__item--row list__item--date\">Дата</div>\r\n\t\t\t\t\t<div className=\"list__item--row list__item--distance\">Дистанция, км</div>\r\n\t\t\t\t\t<div className=\"list__item--row list__item--actions\">Действия</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\titems\r\n\t\t\t\t\t.sort((a, b)=> {\r\n\t\t\t\t\t\ta = a.date.split('.').reverse().join('');\r\n\t\t\t\t\t\tb = b.date.split('.').reverse().join('');\r\n\t\t\t\t\t\treturn a > b ? 1 : a < b ? -1 : 0;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map(item => \r\n\t\t\t\t\t\t<Item \r\n\t\t\t\t\t\t\t{...item}\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\tonRemove={onRemove}\r\n\t\t\t\t\t\t\tonEdit={onEdit}\r\n\t\t\t\t\t\t/>)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nTable.propTypes = {\r\n\titems: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tid: PropTypes.string,\r\n\t\tdate: PropTypes.string,\r\n\t\tdistance: PropTypes.oneOfType([\r\n\t\t\tPropTypes.number,\r\n\t\t\tPropTypes.string,\r\n\t\t])\r\n\t})).isRequired,\r\n\tonRemove: PropTypes.func.isRequired,\r\n\tonEdit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Table;\r\n","class TrainingModel {\r\n    constructor(id, date, distance) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.distance = distance;\r\n    }\r\n}\r\n\r\nexport default TrainingModel;\r\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid'\n\nimport Form from './components/Form';\nimport Table from './components/Table';\n\nimport TrainingModel from './model/model';\n\nimport './App.css';\n\nconst App = () => {\n\tconst [list, setList] = useState([]);\n\tconst [error, setError] = useState('');\n\tconst [isEdit, setIsEdit] = useState(false);\n\tconst [form, setForm] = useState({\n\t\tuserDate: '',\n\t\tuserDistance: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tif (!e) return;\n\t\tconst { name, value } = e.target;\n\t\t\n\t\tsetForm(prev => ({ ...prev, [name]: value }));\n\t}\n\n\tconst validateForm = (date, distance) => {\n\t\tconst dateRegExp = /^\\s*(\\d{2})\\.(\\d{2})\\.(\\d{4})\\s*$/g;\n\t\tconst distanceRegExp = /^[0-9.]*$/gm;\n\n\t\tif (dateRegExp.test(date) && distanceRegExp.test(distance)) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconst handleItemAdd = () => {\n\t\tif (!validateForm(form.userDate, form.userDistance)) {\n\t\t\tsetError('Проверьте данные!');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isSameDate = list.some(item => item.date === form.userDate);\n\n\t\tif (isSameDate) {\n\t\t\tsetList(prev => prev.map(item => \n\t\t\t\t(item.date === form.userDate) ? { ...item, distance: +item.distance + +form.userDistance } : item));\n\t\t\tsetForm({ userDate: '', userDistance: '' });\n\t\t\tsetError('');\n\t\t\treturn;\n\t\t}\n\n\t\tsetList(prev => [...prev, new TrainingModel(nanoid(), form.userDate, form.userDistance)]);\n\t\tsetForm({ userDate: '', userDistance: '' });\n\t\tsetError('');\n\t}\n\n\tconst handleEditedItemAdd = () => {\n\t\tsetList(prev => [\n\t\t\t...prev.filter(item => item.date !== form.userDate),\n\t\t\tnew TrainingModel(nanoid(), form.userDate, form.userDistance)\n\t\t]);\n\t\tsetIsEdit(false);\n\t\tsetError('');\n\t\tsetForm({ userDate: '', userDistance: '' });\n\t}\n\n\tconst handleItemEdit = (date, distance) => {\n\t\tsetForm({ userDate: date, userDistance: distance, });\n\t\tsetIsEdit(true);\n\t\tsetError('');\n\t}\n\tconst handleItemRemove = (id) => {\n\t\tsetList(prev => prev.filter(item => item.id !== id));\n\t\tsetError('');\n\t\tsetIsEdit(false);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"app__wrapper\">\n\t\t\t\t<Form \n\t\t\t\t\tform={form} \n\t\t\t\t\tonInputsChange={handleInputChange}\n\t\t\t\t\tonAdd={handleItemAdd}\n\t\t\t\t\tisEdit={isEdit}\n\t\t\t\t\tonEditAdd={handleEditedItemAdd}\n\t\t\t\t/>\n\t\t\t\t<Table \n\t\t\t\t\tonEdit={handleItemEdit}\n\t\t\t\t\tonRemove={handleItemRemove}\n\t\t\t\t\titems={list}\n\t\t\t\t\terror={error}\n\t\t\t\t\tisEdit={isEdit}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}